name: Docker Image CI

on:
  push:
    branches: [ "main" ]

env:
  image_name: frontend
  repository: pypsa-workflow
  registry: europe-central2-docker.pkg.dev

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.changes.outputs.should_build }}
      manifests_changed: ${{ steps.changes.outputs.manifests_changed }}
      src_tag: ${{ steps.image_tag.outputs.src_tag }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          should_build:
            - 'src/**'
          manifests_changed:
            - 'manifests/**'
            - '.github/workflows/deploy.yml'
    - id: image_tag
      run: |
        last_src_commit=$(git log -n 1 --pretty=format:%H -- src)
        pypsa_builder_hash=$(git rev-parse --short $last_src_commit)
        echo src_tag=$pypsa_builder_hash
        echo src_tag=$pypsa_builder_hash >> $GITHUB_OUTPUT


  build:
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.should_build == 'true' }}
    needs: changes
    steps:
    - uses: actions/checkout@v3
    - name: Push to GCR GitHub Action
      uses: RafikFarhad/push-to-gcr-github-action@v4.1
      with:
        gcloud_service_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
        registry: ${{ env.registry }}
        project_id: ${{ secrets.GKE_PROJECT }}
        image_name: ${{ env.repository }}/${{ env.image_name }}
        image_tag: ${{ needs.changes.outputs.src_tag }},latest
        dockerfile: Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: 
    - build
    - changes
    if: ${{ always() && (needs.build.changes.manifests_changed == 'true' || needs.changes.result == 'success') }} 
    steps:
    - uses: actions/checkout@v3
    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCLOUD_SERVICE_KEY }}'
    - uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
      with:
        cluster_name: ${{ secrets.GKE_CLUSTER }}
        location: ${{ secrets.GKE_ZONE }}
    - name: Deploy newest image to GKE
      run: |
        sed 's,${_IMAGE},${{ env.registry }}/${{ secrets.GKE_PROJECT }}/${{ env.repository }}/${{ env.image_name }}:${{ needs.changes.outputs.src_tag }},g' \
          manifests/deployment.yaml.tmpl > manifests/deployment.yaml
        kubectl apply -f manifests
